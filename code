#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

// Define LCD address and dimensions
#define I2C_ADDR 0x27 // I2C address of the LCD
#define LCD_COLS 16   // Number of columns on the LCD
#define LCD_ROWS 2    // Number of rows on the LCD

// Define keypad mapping and pins
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {17, 16, 18, 15};
byte colPins[COLS] = {2, 13, 12, 14};
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// Initialize the I2C LCD object
LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLS, LCD_ROWS);
#define Red 32

#define green 25
// Define variables
const String secretPIN = "1234";
String enteredPIN = "";
int wrongAttempts = 0;

void setup() {
  Serial.begin(9600);

  // Set up LCD
  lcd.init();
  lcd.backlight();
  pinMode(Red, OUTPUT);
  pinMode(green,OUTPUT);
  // Display initial message
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter 4-digit PIN");
}

void loop() {
  char key = keypad.getKey();
  if (key != NO_KEY) {
    if (key == '#') {
      if (enteredPIN == secretPIN) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("PIN correct");
        digitalWrite(green, HIGH);
        digitalWrite(Red, LOW);

        delay(2000);
        // Reset PIN entry
        enteredPIN = "";
        wrongAttempts = 0;
        // Display initial message
        lcd.clear();
        lcd.setCursor(0, 0);
        digitalWrite(green, LOW);
        lcd.print("Enter 4-digit PIN");
      } else {
        wrongAttempts++;
        if (wrongAttempts >= 3) {
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Warning: Security");
          lcd.setCursor(0, 1);
          lcd.print("breach detected!");
          digitalWrite(green, LOW);
          digitalWrite(Red, HIGH);
          delay(5000); // Display warning for 5 seconds
          // Reset PIN entry and attempts
          enteredPIN = "";
          wrongAttempts = 0;
          // Display initial message
          lcd.clear();
          lcd.setCursor(0, 0);
          digitalWrite(Red, LOW);
          lcd.print("Enter 4-digit PIN");
        } else {
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("PIN incorrect");
          digitalWrite(Red, HIGH);
          delay(500);
          digitalWrite(Red, LOW);
          delay(500);
          digitalWrite(Red, HIGH);
          delay(500);
          digitalWrite(Red, LOW);
          delay(500);
          // Clear LCD and reset PIN entry
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Enter 4-digit PIN");
          enteredPIN = "";
        }
      }
    } else {
      // Concatenate key press to PIN entry
      enteredPIN += key;
      // Display asterisks for each entered digit
      lcd.setCursor(enteredPIN.length() - 1, 1);
      lcd.print("*");
      // Check if PIN entry is complete (4 digits)
      if (enteredPIN.length() == 4) {
        // Check PIN validity when entry is complete
        if (enteredPIN == secretPIN) {
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("PIN correct");
          digitalWrite(green, HIGH);
          delay(2000);
          // Reset PIN entry
          enteredPIN = "";
          // Display initial message
          lcd.clear();
          lcd.setCursor(0, 0);
          digitalWrite(green, LOW);
          lcd.print("Enter 4-digit PIN");
        } else {
          wrongAttempts++;
          if (wrongAttempts >= 3) {
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Warning: Security");
            lcd.setCursor(0, 1);
            lcd.print("breach detected!");
            digitalWrite(green, LOW);
            digitalWrite(Red, HIGH);
            delay(5000); // Display warning for 5 seconds
            digitalWrite(green, LOW);
            digitalWrite(Red, LOW);
            
          
            // Reset PIN entry and attempts
            enteredPIN = "";
            wrongAttempts = 0;
            // Display initial message
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Enter 4-digit PIN");
          } else {
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("PIN incorrect");
            digitalWrite(Red, HIGH);
            delay(500);
            digitalWrite(Red, LOW);
            delay(500);
            digitalWrite(Red, HIGH);
            delay(500);
            digitalWrite(Red, LOW);
            delay(500); // Display incorrect PIN message for 2 seconds
            // Clear LCD and reset PIN entry
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Enter 4-digit PIN");
            enteredPIN = "";
          }
        }
      }
    }
  }
}
 
